#include <DHT.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <ArduinoJson.h> // Biblioteca ArduinoJson

#define endereco  0x27 // 
#define colunas   16
#define linhas    2

#define buzzerPin 4
#define led 7
#define ledVerde 11
#define DHTPIN 10
#define DHTTYPE DHT11
#define LDRPIN A2 // Pino do LDR

DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(endereco, colunas, linhas);

void setup() {
  delay(1000);
  pinMode(led, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
  dht.begin();
  lcd.init(); 
  lcd.backlight(); 
  lcd.clear(); 
  Serial.begin(9600);
}

void loop() {
  unsigned long currentTime = millis();
  static unsigned long previousTime = 0;
  static unsigned long temperatureReadInterval = 500; // Leitura a cada 0,5 segundos

  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Lê o valor do LDR
  int ldrValue = analogRead(LDRPIN);

  // Crie um objeto JSON com os dados
  StaticJsonDocument<200> json;
  json["temperature"] = temperature;
  json["humidity"] = humidity;
  json["ldrValue"] = ldrValue;

  // Serialize o objeto JSON em uma string JSON
  String jsonString;
  serializeJson(json, jsonString);

  // Envia a string JSON pelo monitor serial
  Serial.println(jsonString);

  if (currentTime - previousTime >= temperatureReadInterval) {
    // Realize as ações relacionadas à temperatura aqui
    previousTime = currentTime;

    if (temperature > 30) {
      lcd.clear();
      lcd.print("Temperatura alta!");
      Serial.println("Temperatura alta detectada!");
      for (int i = 0; i < 3; i++) {
        tone(buzzerPin, 3100); // Toca o buzzer na frequência desejada
        piscaLed(led, 1); // Pisca o LED enquanto o buzzer toca
        delay(200); // Aguarda a duração do som
        noTone(buzzerPin); // Desliga o buzzer
        delay(200); // Intervalo curto entre as notas
      }
    } else {
      piscaLed(ledVerde, 1); // Pisca o LED uma vez lentamente
      lcd.clear();
      lcd.print("Temp: ");
      lcd.print(temperature);
      lcd.print("C");
      lcd.setCursor(0, 1); 
      lcd.print("Hum: ");
      lcd.print(humidity);
      lcd.print("%");
      Serial.println("Temp: " + String(temperature) + "C");
      Serial.println("Hum: " + String(humidity) + "%");
      delay(3000);
      lcd.clear();
      lcd.print("LDR: ");
      lcd.print(ldrValue);
      Serial.println("LDR: " + String(ldrValue));
      delay(2500);
    }
  }
}

void piscaLed(int ledPin, int vezes) {
  for (int i = 0; i < vezes; i++) {
    digitalWrite(ledPin, HIGH); // Liga o LED
    delay(500); // Aguarda meio segundo
    digitalWrite(ledPin, LOW); // Desliga o LED
    delay(500); // Aguarda meio segundo
  }
}